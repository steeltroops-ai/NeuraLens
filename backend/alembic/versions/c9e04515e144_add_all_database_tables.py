"""Add all database tables

Revision ID: c9e04515e144
Revises: fcb4d47c6cc6
Create Date: 2025-08-24 14:09:07.683327

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c9e04515e144'
down_revision: Union[str, Sequence[str], None] = 'fcb4d47c6cc6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assessment_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('nri_score', sa.Float(), nullable=True),
    sa.Column('overall_risk_category', sa.String(length=50), nullable=True),
    sa.Column('score_change', sa.Float(), nullable=True),
    sa.Column('trend_direction', sa.String(length=20), nullable=True),
    sa.Column('assessment_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_history_id'), 'assessment_history', ['id'], unique=False)
    op.create_table('performance_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('component', sa.String(length=100), nullable=True),
    sa.Column('modality', sa.String(length=50), nullable=True),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('target_value', sa.Float(), nullable=True),
    sa.Column('threshold_warning', sa.Float(), nullable=True),
    sa.Column('threshold_critical', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('environment', sa.String(length=50), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_metrics_id'), 'performance_metrics', ['id'], unique=False)
    op.create_table('system_health',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('component', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('memory_usage', sa.Float(), nullable=True),
    sa.Column('disk_usage', sa.Float(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_health_id'), 'system_health', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('ethnicity', sa.String(length=100), nullable=True),
    sa.Column('occupation', sa.String(length=200), nullable=True),
    sa.Column('handedness', sa.String(length=10), nullable=True),
    sa.Column('baseline_cognitive_score', sa.Float(), nullable=True),
    sa.Column('baseline_motor_score', sa.Float(), nullable=True),
    sa.Column('baseline_speech_score', sa.Float(), nullable=True),
    sa.Column('baseline_retinal_score', sa.Float(), nullable=True),
    sa.Column('genetic_risk_factors', sa.JSON(), nullable=True),
    sa.Column('environmental_risk_factors', sa.JSON(), nullable=True),
    sa.Column('language_preference', sa.String(length=10), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('education_years', sa.Integer(), nullable=True),
    sa.Column('family_history', sa.JSON(), nullable=True),
    sa.Column('medical_history', sa.JSON(), nullable=True),
    sa.Column('medications', sa.JSON(), nullable=True),
    sa.Column('lifestyle_factors', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_assessment', sa.DateTime(), nullable=True),
    sa.Column('consent_given', sa.Boolean(), nullable=True),
    sa.Column('privacy_settings', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('validation_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('study_id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.String(length=255), nullable=False),
    sa.Column('modality', sa.String(length=50), nullable=False),
    sa.Column('assessment_date', sa.DateTime(), nullable=False),
    sa.Column('predicted_risk', sa.Float(), nullable=True),
    sa.Column('predicted_category', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('actual_diagnosis', sa.String(length=200), nullable=True),
    sa.Column('actual_risk_category', sa.String(length=50), nullable=True),
    sa.Column('clinical_scores', sa.JSON(), nullable=True),
    sa.Column('correct_prediction', sa.Boolean(), nullable=True),
    sa.Column('prediction_error', sa.Float(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('education_years', sa.Integer(), nullable=True),
    sa.Column('biomarkers', sa.JSON(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('quality_metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_validation_results_id'), 'validation_results', ['id'], unique=False)
    op.create_table('validation_studies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('study_id', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('principal_investigator', sa.String(length=200), nullable=True),
    sa.Column('institution', sa.String(length=300), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('target_participants', sa.Integer(), nullable=True),
    sa.Column('actual_participants', sa.Integer(), nullable=True),
    sa.Column('study_sites', sa.Integer(), nullable=True),
    sa.Column('study_type', sa.String(length=100), nullable=True),
    sa.Column('control_group', sa.Boolean(), nullable=True),
    sa.Column('blinded', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('overall_accuracy', sa.Float(), nullable=True),
    sa.Column('sensitivity', sa.Float(), nullable=True),
    sa.Column('specificity', sa.Float(), nullable=True),
    sa.Column('auc_score', sa.Float(), nullable=True),
    sa.Column('f1_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_validation_studies_id'), 'validation_studies', ['id'], unique=False)
    op.create_index(op.f('ix_validation_studies_study_id'), 'validation_studies', ['study_id'], unique=True)
    op.create_table('assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('modalities', sa.JSON(), nullable=True),
    sa.Column('assessment_type', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessments_id'), 'assessments', ['id'], unique=False)
    op.create_index(op.f('ix_assessments_session_id'), 'assessments', ['session_id'], unique=True)
    op.create_table('assessment_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('modality', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('risk_score', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('biomarkers', sa.JSON(), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('file_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_results_id'), 'assessment_results', ['id'], unique=False)
    op.create_table('nri_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('nri_score', sa.Float(), nullable=False),
    sa.Column('risk_category', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('uncertainty', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('modality_contributions', sa.JSON(), nullable=True),
    sa.Column('fusion_method', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('follow_up_actions', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nri_results_id'), 'nri_results', ['id'], unique=False)
    op.create_table('validation_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('metric_type', sa.String(length=100), nullable=False),
    sa.Column('modality', sa.String(length=50), nullable=True),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('environment', sa.String(length=50), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_validation_metrics_id'), 'validation_metrics', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_validation_metrics_id'), table_name='validation_metrics')
    op.drop_table('validation_metrics')
    op.drop_index(op.f('ix_nri_results_id'), table_name='nri_results')
    op.drop_table('nri_results')
    op.drop_index(op.f('ix_assessment_results_id'), table_name='assessment_results')
    op.drop_table('assessment_results')
    op.drop_index(op.f('ix_assessments_session_id'), table_name='assessments')
    op.drop_index(op.f('ix_assessments_id'), table_name='assessments')
    op.drop_table('assessments')
    op.drop_index(op.f('ix_validation_studies_study_id'), table_name='validation_studies')
    op.drop_index(op.f('ix_validation_studies_id'), table_name='validation_studies')
    op.drop_table('validation_studies')
    op.drop_index(op.f('ix_validation_results_id'), table_name='validation_results')
    op.drop_table('validation_results')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_system_health_id'), table_name='system_health')
    op.drop_table('system_health')
    op.drop_index(op.f('ix_performance_metrics_id'), table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index(op.f('ix_assessment_history_id'), table_name='assessment_history')
    op.drop_table('assessment_history')
    # ### end Alembic commands ###
